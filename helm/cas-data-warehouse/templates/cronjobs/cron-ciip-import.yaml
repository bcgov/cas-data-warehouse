apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "cas-data-warehouse.fullname" . }}-ciip-import
  labels:
{{ include "cas-data-warehouse.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    "helm.sh/hook-weight": "-5"
spec:
  suspend: true # This cron job is intended to be triggered manually
  schedule: "0 * * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      activeDeadlineSeconds: 600
      template:
        metadata:
          labels:
{{ include "cas-data-warehouse.labels" . | indent 14 }}
        spec:
          activeDeadlineSeconds: 600
          restartPolicy: Never
          containers:
            - env:
                - name: WAREHOUSE_USER
                  valueFrom:
                    secretKeyRef:
                      key: user
                      name: {{ template "cas-data-warehouse.fullname" . }}-pg-pguser-datawarehouse
                - name: WAREHOUSE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: {{ template "cas-data-warehouse.fullname" . }}-pg-pguser-datawarehouse
                - name: WAREHOUSE_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: dbname
                      name: {{ template "cas-data-warehouse.fullname" . }}-pg-pguser-datawarehouse
                - name: WAREHOUSE_HOST
                  valueFrom:
                    secretKeyRef:
                      key: host
                      name: {{ template "cas-data-warehouse.fullname" . }}-pg-pguser-datawarehouse
                - name: WAREHOUSE_PORT
                  valueFrom:
                    secretKeyRef:
                      key: port
                      name: {{ template "cas-data-warehouse.fullname" . }}-pg-pguser-datawarehouse
                - name: CIIP_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: cas-ciip-portal
                - name: CIIP_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: cas-ciip-portal
                - name: CIIP_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: cas-ciip-portal
                - name: CIIP_PORT
                  value: "5432"
                - name: CIIP_HOST
                  value: "{{ .Values.import.ggircs.service }}.{{ .Values.import.ggircs.namespace }}"
              name: {{ template "cas-data-warehouse.fullname" . }}-ciip-import
              image: postgres:17
              resources:
                limits:
                  cpu: 500m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
              command:
                - /usr/bin/env
                - bash
                - -c
                - >
                  touch .pgpass; chmod 0600 .pgpass;
                  echo "$GGIRCS_HOST:$GGIRCS_PORT:$GGIRCS_DATABASE:$GGIRCS_USER:$GGIRCS_PASSWORD" >> .pgpass;
                  echo "$WAREHOUSE_HOST:$WAREHOUSE_PORT:$WAREHOUSE_DATABASE:$WAREHOUSE_USER:$WAREHOUSE_PASSWORD" >> .pgpass;
                  PGPASSFILE=".pgpass" pg_dump -w -h $GGIRCS_HOST -p $GGIRCS_PORT -U $GGIRCS_USER --format=custom --schema="swrs" --schema="ggircs_parameters" $GGIRCS_DATABASE |
                  PGPASSFILE=".pgpass" pg_restore -w --clean --if-exists --no-owner --no-privileges --single-transaction -d $WAREHOUSE_DATABASE -h $WAREHOUSE_HOST -p $WAREHOUSE_PORT -U $WAREHOUSE_USER
